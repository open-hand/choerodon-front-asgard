# include: https://api.choerodon.com.cn/devops/v1/projects/261899051275677696/ci_contents/pipelines/d92fdea5-2de1-4d8e-9aa6-850add1d77d4/content.yaml

#include: https://api.choerodon.com.cn/devops/v1/projects/1529/ci_contents/pipelines/f558f8ec-461f-408e-8a8e-bbd113e0dcb9/content.yaml
#
##image: registry.cn-shanghai.aliyuncs.com/c7n/cibase:0.9.1
##
##stages:
##  - build
##
##build front:
##  stage: build
##  script:
##    - npm install --registry ${NPM_REPO} --sass-binary-site=http://npm.taobao.org/mirrors/node-sass
##    - chmod -R 755 node_modules
##    - npm run compile
##    - echo "//${NPM_REGISTRY}:_authToken=${NPM_TOKEN}">.npmrc
##    - npm publish --registry ${NPM_PUBLISH_REGISTRY}
##    - curl -sX POST -F token=${FRONT_REPOSITORY_TOKEN} -F ref=${REF_NAME} https://code.choerodon.com.cn/api/v4/projects/7909/trigger/pipeline
##  only:
##    - tags
##    - master
##    - /^.*hotfix.*$/
##    - /^.*release.*$/
# job模板，使用时根据需求替换
# job名称（与任务名称保持一致）
job_1:
  # job所属阶段名称，与创建阶段时保持一致
  stage: 构建
  # job执行内容
  script:
    - |
      CURRENT_VERSION=$(jq -r '.version' package.json)
      if [ x"$CURRENT_VERSION" \< x"2.2.0-beta.99" ]; then
          RUN_FLAG=1
      else
          if [ ! -z $CI_COMMIT_BRANCH ]; then
              RUN_FLAG=2
          else
              RUN_FLAG=3
          fi
      fi

      if [ "$CURRENT_VERSION" == "2.2.0" ]; then
          if [ ! -z $CI_COMMIT_BRANCH ]; then
              RUN_FLAG=2
          else
              RUN_FLAG=3
          fi
      fi

      set -x

      echo "$RUN_FLAG"

      case $RUN_FLAG in
          1)
              echo "//${NPM_INSTALL_REGISTRY}:_authToken=${NPM_TOKEN}">.npmrc
              npm install --registry ${NPM_REPO} --sass-binary-site=http://npm.taobao.org/mirrors/node-sass --ignore-engines
              chmod -R 755 node_modules
              npm run compile
              echo "//${NPM_REGISTRY}:_authToken=${NPM_TOKEN}">.npmrc
              npm publish --registry ${NPM_PUBLISH_REGISTRY}
              curl -sX POST -F token=${FRONT_REPOSITORY_TOKEN} -F ref=${ref} https://code.choerodon.com.cn/api/v4/projects/26549/trigger/pipeline
              ;;
          2)
              echo "//${NPM_INSTALL_REGISTRY}:_authToken=${NPM_TOKEN}">.npmrc
              npm config set proxy false
              npm config set always-auth true
              npm install --registry ${NPM_REPO} --sass-binary-site=http://npm.taobao.org/mirrors/node-sass --ignore-engines
              chmod -R 755 node_modules
              npm run dist
              kaniko -c $CI_PROJECT_DIR -f $CI_PROJECT_DIR/Dockerfile -d ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG}
              chart_build
              ;;
          *)
              echo "//${NPM_INSTALL_REGISTRY}:_authToken=${NPM_TOKEN}">.npmrc
              npm config set proxy false
              npm config set always-auth true
              npm install --registry ${NPM_REPO} --sass-binary-site=http://npm.taobao.org/mirrors/node-sass --ignore-engines
              chmod -R 755 node_modules
              npm run dist
              kaniko -c $CI_PROJECT_DIR -f $CI_PROJECT_DIR/Dockerfile -d ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG}
              chart_build
      esac
  except:
    refs:
      - next
